#!/bin/bash
#SBATCH --time=0-0:10:0        # Job run time
#SBATCH --mincpus=10           # Minimum number of CPUs
#SBATCH -n 1                   # Number of MPI tasks
#SBATCH -J GFN2_ensemble.QCG   # Job name
#SBATCH -c 10                  # Number of cores per task

#The array is determined by submit_job.sh
#Submit by >>bash submit_job.sh

export SLURM_SUBMIT_DIR
export SLURM_ARRAY_TASK_ID
export SLURM_NTASKS

i=$SLURM_ARRAY_TASK_ID
element="$ELEMENT"  # Ensure ELEMENT is passed from job submission

dir_path="$SLURM_SUBMIT_DIR/GFN2_${i}" #made by getxyz.py
cd "$dir_path"

echo $SLURM_NTASKS > $dir_path/nodes.info
srun hostname >> $dir_path/nodes.info
echo $USER >> $dir_path/nodes.info
pwd >> $dir_path/nodes.info
mydir=$(pwd)

module load xtb/6.5.0
export PATH=/path/to/xtb:$PATH

# Creating local scratch folder ....

export scratchlocation="/path/to/scratch"
tdir=$(mktemp -d "$scratchlocation/${SLURM_JOB_ID}_${element}_GFN2_${i}")

if [ ! -d "$tdir" ]; then
  echo "Failed to create temporary directory."
  exit 1
fi

# Sync files to scratch (customize based on what files are needed)
rsync -av "$dir_path/" "$tdir/"

# Creating nodefile in scratch
echo $SLURM_NODELIST > "$tdir/${element}_GFN2_${i}.nodes"

# cd to scratch
cd "$tdir"

# Copy job and node info to beginning of outputfile
echo "Job execution start: $(date)" >>  "$dir_path/${element}_GFN2_${i}.out"
echo "Shared library path: $LD_LIBRARY_PATH" >>  "$dir_path/${element}_GFN2_${i}.out"
echo "Slurm Job ID is: ${SLURM_JOB_ID}" >>  "$dir_path/${element}_GFN2_${i}.out"
echo "Slurm Job name is: ${SLURM_JOB_NAME}" >>  "$dir_path/${element}_GFN2_${i}.out"
echo $SLURM_NODELIST >> "$dir_path/${element}_GFN2_${i}.out"

#Start QCG job
xtb crest_conformer_${i}.xyz --ohess --alpb acetonitrile --chrg $CHRG > ${element}_GFN2_${SLURM_ARRAY_TASK_ID}_output  &
wait

# Copy important output back to the original directory and clean up scratch directory
cp -r "$tdir"/* "$dir_path"
rm -rf "$tdir"
